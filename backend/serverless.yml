service: moneymind-api

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-southeast-5
  stage: ${opt:stage, 'dev'}

  # Environment variables for all functions
  environment:
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}-expenses
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}

  # IAM permissions for DynamoDB
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
            - dynamodb:BatchGetItem
            - kms:Decrypt
            - kms:DescribeKey
          Resource:
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/*'
            - 'arn:aws:kms:${self:provider.region}:*:key/*'
        - Effect: Allow
          Action:
            - kms:Decrypt
            - kms:DescribeKey
          Resource:
            - 'arn:aws:kms:${self:provider.region}:*:key/*'

functions:
  root:
    handler: src/handler/main.main
    events:
      - http:
          path: /
          method: get
          cors: true

  # Expenses endpoints
  getExpenses:
    handler: src/handler/expenses.getExpenses
    events:
      - http:
          path: /api/expenses
          method: get
          cors: true

  getExpense:
    handler: src/handler/expenses.getExpense
    events:
      - http:
          path: /api/expenses/{id}
          method: get
          cors: true

  createExpense:
    handler: src/handler/expenses.createExpense
    events:
      - http:
          path: /api/expenses
          method: post
          cors: true

  updateExpense:
    handler: src/handler/expenses.updateExpense
    events:
      - http:
          path: /api/expenses/{id}
          method: put
          cors: true

  destroyExpense:
    handler: src/handler/expenses.destroyExpense
    events:
      - http:
          path: /api/expenses/{id}
          method: delete
          cors: true

  searchExpenses:
    handler: src/handler/expenses.searchExpenses
    events:
      - http:
          path: /api/expenses/search
          method: get
          cors: true

  bulkCreateExpenses:
    handler: src/handler/expenses.bulkCreateExpenses
    events:
      - http:
          path: /api/expenses/bulk
          method: post
          cors: true

  # TODO: Analytics endpoint for dashboard
  # getAnalytics:
  #   handler: src/handler/analytics.getAnalytics
  #   events:
  #     - http:
  #         path: /api/analytics
  #         method: get
  #         cors: true

  # OPTIONS handler for CORS preflight
  options:
    handler: src/handler/options.handleOptions
    events:
      - http:
          path: /{proxy+}
          method: options
          cors: true

plugins:
  - serverless-esbuild
  - serverless-dotenv-plugin

# DynamoDB Resources
resources:
  Resources:
    # Main table for all MoneyMind data
    MoneyMindTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        BillingMode: PROVISIONED # Perfect for MVP
        ProvisionedThroughput: # Required for PROVISIONED mode
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

        # Primary Key Structure
        AttributeDefinitions:
          - AttributeName: PK # Partition Key: USER#{userId}
            AttributeType: S
          - AttributeName: SK # Sort Key: EXPENSE#{date}#{expenseId} or USER#{userId}
            AttributeType: S
          - AttributeName: GSI1PK # Global Secondary Index 1 - Category queries
            AttributeType: S
          - AttributeName: GSI1SK # GSI1 Sort Key - Date for category-based date ranges
            AttributeType: S

        KeySchema:
          - AttributeName: PK
            KeyType: HASH # Partition key
          - AttributeName: SK
            KeyType: RANGE # Sort key

        # Global Secondary Index for category-based queries
        GlobalSecondaryIndexes:
          - IndexName: CategoryDateIndex
            KeySchema:
              - AttributeName: GSI1PK # Format: USER#{userId}#CATEGORY#{category}
                KeyType: HASH
              - AttributeName: GSI1SK # Format: {date}#{expenseId}
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput: # Required for PROVISIONED mode
              ReadCapacityUnits: 2 # GSI needs its own capacity (conservative)
              WriteCapacityUnits: 2

        # Point-in-time recovery for data protection
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true

        # Tags for cost tracking
        Tags:
          - Key: Service
            Value: MoneyMind
          - Key: Environment
            Value: ${self:provider.stage}
          - Key: Region
            Value: Malaysia
          - Key: Currency
            Value: MYR

  # CloudFormation Outputs
  Outputs:
    MoneyMindTableName:
      Description: DynamoDB table name
      Value:
        Ref: MoneyMindTable
      Export:
        Name: ${self:service}-${self:provider.stage}-table-name

    MoneyMindTableArn:
      Description: DynamoDB table ARN
      Value:
        Fn::GetAtt: [MoneyMindTable, Arn]
      Export:
        Name: ${self:service}-${self:provider.stage}-table-arn
